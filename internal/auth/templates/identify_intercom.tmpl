<!doctype html><html><head>
<meta charset="utf-8"/><meta name="viewport" content="width=device-width,initial-scale=1"/>
<meta http-equiv="refresh" content="13;url={{.ReturnTo}}"/>
<title>Signing you in…</title>
<style>
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
  background: white;
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #333;
}
.container {
  text-align: center;
}
.spinner {
  width: 60px;
  height: 60px;
  margin: 0 auto 20px;
  border: 4px solid #e0e0e0;
  border-top: 4px solid #667eea;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
.message {
  font-size: 18px;
  font-weight: 500;
}
.fallback {
  margin-top: 20px;
  font-size: 14px;
  color: #666;
}
.fallback a {
  color: #667eea;
  text-decoration: none;
}
.fallback a:hover {
  text-decoration: underline;
}
</style>
</head><body>
<div class="container">
  <div class="spinner"></div>
  <p class="message">Signing you in to chat…</p>
  <p class="fallback">If you're not redirected, <a href="{{.ReturnTo}}">Continue</a>.</p>
</div>
<script>
  window.intercomSettings = {
    app_id: "{{.AppID}}",
    intercom_user_jwt: "{{.JWT}}"{{if .Email}},
    email: "{{.Email}}"{{end}}{{if .Name}},
    name: "{{.Name}}"{{end}}
  };
</script>
<script src="https://widget.intercom.io/widget/{{.AppID}}" async></script>
<script>
  // Poll for Intercom to load before redirecting
  (function() {
    var retryCount = 0;
    var MAX_RETRIES = 10; // 10 attempts * 100ms = 1 second max

    function isIntercomLoaded() {
      return typeof window.Intercom === 'function';
    }

    function waitForIntercomAndRedirect() {
      if (isIntercomLoaded()) {
        console.log('Intercom loaded successfully');
        // Boot Intercom with user data
        window.Intercom('boot', window.intercomSettings);

        // Wait 1 second for Intercom to initialize, then handle redirect/close
        setTimeout(function() {
          var returnTo = "{{.ReturnTo}}";

          // Debug: Check window.opener
          console.log('DEBUG: window.opener exists?', !!window.opener);
          console.log('DEBUG: window.opener value:', window.opener);

          // Always try to notify opener (if it exists)
          try {
            if (window.opener && !window.opener.closed) {
              console.log('Notifying opener window of login success');
              var targetOrigin = '*';
              if (returnTo) {
                try {
                  var url = new URL(returnTo);
                  targetOrigin = url.origin;
                  console.log('DEBUG: Sending postMessage to origin:', targetOrigin);
                } catch (e) {
                  console.log('Could not parse return URL, using wildcard origin');
                }
              }

              window.opener.postMessage(
                { type: 'intercom_login_success' },
                targetOrigin
              );
              console.log('DEBUG: postMessage sent');
            } else {
              console.log('DEBUG: No opener or opener is closed');
            }
          } catch (e) {
            console.log('Could not access window.opener:', e.message);
          }

          // TEMP: Testing referer forwarding after HTTPS switch
          // Window close is disabled - will redirect to test if referer header works
          // TEMP: Added 10 second delay for debugging
          setTimeout(function() {
            console.log('Redirecting to referer in 10 seconds (debug delay - testing HTTPS referer)');
            setTimeout(function() {
              console.log('Redirecting to:', returnTo);
              if (returnTo) {
                location.replace(returnTo);
              }
            }, 10000);
          }, 1500);
        }, 1000);
      } else {
        retryCount++;
        if (retryCount < MAX_RETRIES) {
          console.log('Waiting for Intercom to load... attempt', retryCount);
          setTimeout(waitForIntercomAndRedirect, 100);
        } else {
          console.log('Max retries reached, redirecting without Intercom');
          var returnTo = "{{.ReturnTo}}";

          // Try to notify opener
          try {
            if (window.opener && !window.opener.closed) {
              var targetOrigin = '*';
              if (returnTo) {
                try {
                  var url = new URL(returnTo);
                  targetOrigin = url.origin;
                } catch (e) {}
              }
              window.opener.postMessage(
                { type: 'intercom_login_success' },
                targetOrigin
              );
            }
          } catch (e) {}

          // TEMP: Testing referer forwarding after HTTPS switch (max retries path)
          // Window close is disabled - will redirect to test if referer header works
          // TEMP: Added 10 second delay for debugging
          setTimeout(function() {
            console.log('Redirecting to referer in 10 seconds (debug delay - max retries, testing HTTPS referer)');
            setTimeout(function() {
              if (returnTo) {
                location.replace(returnTo);
              }
            }, 10000);
          }, 1500);
        }
      }
    }

    // Start polling when page loads
    window.addEventListener('load', waitForIntercomAndRedirect);
  })();
</script>
</body></html>